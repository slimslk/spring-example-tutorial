name: Backend Package and Deploy to AWS

on:
  workflow_dispatch:
  push:
    branches:
      - release
    paths:
      - backend/**

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.3
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: dimm
          POSTGRES_PASSWORD: cghbyu-trpfvgk
          POSTGRES_DB: customer
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Send Message to Slack that Deployment has started
        working-directory: /
        run: >
          curl -X POST -H 'Content-type: application/json' --data
          '{"text":"Spring example deployment has started"}'
          ${{ secrets.SLACK_WEBHOOK_TOKEN }}
      - uses: actions/checkout@v4
      - name: Send message to Slack with commit and sha
        run: >
          curl -X POST -H 'Content-type: application/json' --data
          '{"text":":github: https://github.com/slimslk/spring-example-tutorial/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}'
          ${{ secrets.SLACK_WEBHOOK_TOKEN }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set build version
        id: build-version
        run: echo "BUILD_VERSION=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Build package push with Maven
        run: mvn -ntp -B verify jib:build -Ddocker.image.tag=${{steps.build-version.outputs.BUILD_VERSION}}
      - name: Send Message to Slack that Build is completed and new image uploaded to dockerhub
        run: >
          curl -X POST -H 'Content-type: application/json' --data
          '{"text":"Build is completed and new image with tag: ${{steps.build-version.outputs.BUILD_VERSION}} uploaded to dockerhub"}'
          ${{ secrets.SLACK_WEBHOOK_TOKEN }}
      - name: Update Dockerrun.aws.json file with new image tag
        working-directory: .
        run: |
          echo "Dockerrun.aws.json before updating"
          cat Dockerrun.aws.json
          sed -i -E 's_(${{ secrets.DOCKERHUB_USERNAME }}/dimm-api:)([^"])*_\1'${{steps.build-version.outputs.BUILD_VERSION}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating"
          cat Dockerrun.aws.json
      - name: Deploy updated Dockerrun.aws.json file to AWS
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_ENVIRONMENT_NAME }}
          version_description: ${{ github.SHA }}
          version_label: ${{ steps.build-version.outputs.BUILD_VERSION }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: Dockerrun.aws.json
      - name: Send Message to Slack that Deployment to AWS completed
        run: >
          curl -X POST -H 'Content-type: application/json' --data
          '{"text":"Deployment to AWS completed"}'
          ${{ secrets.SLACK_WEBHOOK_TOKEN }}
      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git status
          git add --all
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{steps.build-version.outputs.BUILD_VERSION}}"
          git push
